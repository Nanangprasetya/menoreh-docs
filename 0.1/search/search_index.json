{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Rekat 0.1","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"#setting-up-navigation","title":"Setting up navigation","text":"<p>A clear and concise navigation structure is an important aspect of good project  documentation. Material for MkDocs provides a multitude of options to configure the behavior of navigational elements, including tabs and [sections], and one of its flag-ship feature: instant loading.</p>"},{"location":"#configuration","title":"Configuration","text":""},{"location":"#instant-loading","title":"Instant loading","text":"<p>:octicons-tag-24: 5.0.0 \u00b7 :octicons-unlock-24: Feature flag</p> <p>When instant loading is enabled, clicks on all internal links will be intercepted and dispatched via XHR without fully reloading the page. Add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>theme:\n  features:\n    - navigation.instant\n</code></pre> <p>The resulting page is parsed and injected and all event handlers and components are rebound automatically, i.e., Material for MkDocs now behaves like a Single Page Application. Now, the search index survives navigation, which is especially useful for large documentation sites.</p>"},{"location":"#anchor-tracking","title":"Anchor tracking","text":"<p>:octicons-tag-24: 8.0.0 \u00b7 :octicons-unlock-24: Feature flag</p> <p>When anchor tracking is enabled, the URL in the address bar is automatically updated with the active anchor as highlighted in the table of contents. Add the following lines to <code>mkdocs.yml</code>:</p> <pre><code>theme:\n  features:\n    - navigation.tracking\n</code></pre>"},{"location":"#navigation-tabs","title":"Navigation tabs","text":"<p>[:octicons-tag-24: 1.1.0][Navigation tabs support] \u00b7 :octicons-unlock-24: Feature flag</p> <p>When tabs are enabled, top-level sections are rendered in a menu layer below the header for viewports above <code>1220px</code>, but remain as-is on mobile.1 Add the following lines to <code>mkdocs.yml</code>:</p>   <ol> <li> <p>Prior to :octicons-tag-24: 6.2.0, navigation tabs had a slightly different behavior. All top-level pages (i.e. all top-level entries directly refefring to a <code>*.md</code> file) defined inside the <code>nav</code> entry of <code>mkdocs.yml</code> were grouped under the first tab which received the title of the first page. This made it impossible to include a top-level page (or external link) as a tab item, as was reported in #1884 and #2072. From :octicons-tag-24: 6.2.0 on, navigation tabs include all top-level pages and sections.\u00a0\u21a9</p> </li> </ol>"},{"location":"documentation/extention/","title":"Extensions","text":"<p>Markdown is a very small language with a kind-of reference implementation called John Gruber's Markdown. [Python Markdown] and [Python Markdown Extensions] are two packages that enhance the Markdown writing experience, adding useful syntax extensions for technical writing.</p>"},{"location":"documentation/extention/#supported-extensions","title":"Supported extensions","text":"<p>The following extensions are all supported by Material for MkDocs and therefore  strongly recommended. Click on each extension to learn about its purpose and configuration:</p>  <ul> <li>Abbreviations</li> <li>[Admonition]</li> <li>[Arithmatex]</li> </ul>"},{"location":"documentation/extention/#configuration","title":"Configuration","text":"<p>Extensions are configured as part of <code>mkdocs.yml</code> \u2013 the MkDocs configuration file. The following sections contain two example configurations to bootstrap your documentation project.</p>"},{"location":"documentation/extention/#minimal-configuration","title":"Minimal configuration","text":"<p>This configuration is a good starting point for when you're using Material for  MkDocs for the first time. The best idea is to explore the [reference], and  gradually add what you want to use:</p> <pre><code>markdown_extensions:\n\n  # Python Markdown\n  - toc:\n      permalink: true\n\n  # Python Markdown Extensions\n  - pymdownx.highlight\n  - pymdownx.superfences\n</code></pre>"},{"location":"documentation/extention/#recommended-configuration","title":"Recommended configuration","text":"<p>This configuration enables all Markdown-related features of Material for MkDocs and is great for experienced users bootstrapping a new documentation project:</p> <pre><code>markdown_extensions:\n\n  # Python Markdown\n  - abbr\n  - admonition\n  - attr_list\n  - def_list\n  - footnotes\n  - md_in_html\n  - toc:\n      permalink: true\n\n  # Python Markdown Extensions\n  - pymdownx.arithmatex:\n      generic: true\n  - pymdownx.betterem:\n      smart_enable: all\n  - pymdownx.caret\n  - pymdownx.details\n  - pymdownx.emoji:\n      emoji_index: !!python/name:materialx.emoji.twemoji\n      emoji_generator: !!python/name:materialx.emoji.to_svg\n  - pymdownx.highlight\n  - pymdownx.inlinehilite\n  - pymdownx.keys\n  - pymdownx.mark\n  - pymdownx.smartsymbols\n  - pymdownx.superfences\n  - pymdownx.tabbed:\n      alternate_style: true\n  - pymdownx.tasklist:\n      custom_checkbox: true\n  - pymdownx.tilde\n</code></pre>"},{"location":"documentation/started/","title":"Getting started","text":"<p>Material for MkDocs is a theme for MkDocs, a static site generator geared towards (technical) project documentation. If you're familiar with Python, you can install Material for MkDocs with <code>pip</code>, the Python package manager. If not, we recommend using <code>docker</code>.</p>"},{"location":"documentation/started/#installation","title":"Installation","text":""},{"location":"documentation/started/#with-pip","title":"with pip recommended","text":"<p>Material for MkDocs is published as a Python package and can be installed with <code>pip</code>, ideally by using a virtual environment. Open up a terminal and install Material for MkDocs with:</p> Latest9.x   <pre><code>pip install mkdocs-material\n</code></pre>   <pre><code>pip install mkdocs-material==\"9.*\" # (1)!\n</code></pre> <ol> <li> <p>Material for MkDocs uses semantic versioning1, which is why it's a     good idea to limit upgrades to the current major version.</p> <p>This will make sure that you don't accidentally [upgrade to the next major version], which may include breaking changes that silently corrupt your site. Additionally, you can use <code>pip freeze</code> to create a lockfile, so builds are reproducible at all times:</p> <pre><code>pip freeze &gt; requirements.txt\n</code></pre> <p>Now, the lockfile can be used for installation:</p> <pre><code>pip install -r requirements.txt\n</code></pre> </li> </ol>    <p>This will automatically install compatible versions of all dependencies: MkDocs, Markdown, Pygments and Python Markdown Extensions. Material for MkDocs always strives to support the latest versions, so there's no need to install those packages separately.</p>  <p>Tip: If you don't have prior experience with Python, we recommend reading  Using Python's pip to Manage Your Projects' Dependencies, which is a really good introduction on the mechanics of Python package management and helps you troubleshoot if you run into errors.</p>"},{"location":"documentation/started/#with-docker","title":"with docker","text":"<p>The official Docker image is a great way to get up and running in a few minutes, as it comes with all dependencies pre-installed. Open up a terminal and pull the image with:</p> Latest9.x   <pre><code>docker pull squidfunk/mkdocs-material\n</code></pre>   <pre><code>docker pull squidfunk/mkdocs-material:9\n</code></pre>    <p>The <code>mkdocs</code> executable is provided as an entry point and <code>serve</code> is the  default command. If you're not familiar with Docker don't worry, we have you covered in the following sections.</p> <p>The following plugins are bundled with the Docker image:</p> <ul> <li>mkdocs-minify-plugin</li> <li>mkdocs-redirects</li> </ul>  How to add plugins to the Docker image? <p>Material for MkDocs only bundles selected plugins in order to keep the size of the official image small. If the plugin you want to use is not included,  create a new <code>Dockerfile</code> and extend the official Docker image:</p> <pre><code>FROM squidfunk/mkdocs-material\nRUN pip install ...\n</code></pre> <p>Next, you can build the image with the following command:</p> <pre><code>docker build -t squidfunk/mkdocs-material .\n</code></pre> <p>The new image can be used exactly like the official image.</p>   <p>:material-apple: Apple Silicon (M1) and :fontawesome-brands-raspberry-pi: Raspberry Pi</p> <p>The official Docker image is only available for <code>linux/amd64</code>. We recommend the third-party image by @afritzler if you want to run Material for MkDocs via Docker on <code>arm64</code> or <code>armv7</code>, as it is automatically built on every release:</p> <pre><code>docker pull ghcr.io/afritzler/mkdocs-material\n</code></pre>"},{"location":"documentation/started/#with-git","title":"with git","text":"<p>Material for MkDocs can be directly used from GitHub by cloning the repository into a subfolder of your project root which might be useful if you want to use the very latest version:</p> <pre><code>git clone https://github.com/squidfunk/mkdocs-material.git\n</code></pre> <p>The theme will reside in the folder <code>mkdocs-material/material</code>. After cloning from <code>git</code>, you must install all required dependencies with:</p> <pre><code>pip install -e mkdocs-material\n</code></pre>   <ol> <li> <p>Note that improvements of existing features are sometimes released as patch releases, like for example improved rendering of content tabs, as they're not considered to be new features.\u00a0\u21a9</p> </li> </ol>"}]}